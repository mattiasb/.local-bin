#!/bin/bash

# SPDX-License-Identifier: GPL-3.0-only
# Copyright 2016, Mattias Bengtsson <mattias.jc.bengtsson@gmail.com>

set -e
set -o pipefail

function _help-flag {
    [[ " ${*} " == *" --help "* ]] || [[ " ${*} " == *" -h "* ]]
}

function _usage {
    echo "Usage: git test commit [<msg>]"
    echo
    echo "Add a series of test commits."
}

function _init {
    if _help-flag "${@}"; then
        echo "Usage: git test init"
        echo
        echo "Initialize a test repository."
        exit 2
    fi

    git init
    echo "Test repo" > README.md
    git add README.md
    git commit -m "Initial commit"
}

function _commit {
    local branch

    if  _help-flag "${@}"; then
        _usage
        exit
    fi

    # Check that we're inside a git worktree
    git rev-parse --is-inside-work-tree >/dev/null

    if [ -z "${*}" ]; then
        _usage
        exit 2
    fi

    for msg in "$@"; do
        branch=$(git rev-parse --abbrev-ref HEAD | sed -e 's/\//--/gi')
        echo "${branch}: Commit ${msg}" >> "commits.${branch}"
        git add "commits.${branch}"
        git commit -a -m "${branch}: Commit ${msg}" -m "This is a test commit!"
    done
};

arg="${1}"
shift
case "${arg}" in
    init)
        _init "${@}"
        ;;
    commit)
        _commit "${@}"
        ;;
    *)
        echo "Usage: git test [command] [<arg>..]"
        echo
        echo "  git test helps you quickly whip up a repo and some commits."
        echo
        echo "Commands:"
        echo "  init                Initialize a test repo"
        echo "  commit              Add some test commits"
        exit 2
        ;;
esac
